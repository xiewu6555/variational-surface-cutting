=== Spot模型纹理映射测试 ===

========================================
步骤 1: 网格预处理
========================================
Loading mesh from: data/spot.obj
Successfully loaded mesh with 2930 vertices, 5856 faces, 8784 edges
加载spot.obj 耗时: 183 ms

原始网格统计:
  顶点数: 2930
  面数: 5856
  边数: 8784
  平均边长: 0.0476844
  最小边长: 0.00434454
  最大边长: 0.11878
  流形状态: 是
  封闭状态: 是

Performing basic mesh repair...
  Removing duplicate vertices...
  Removing degenerate faces...
  Fixing normal orientation...
基础修复 耗时: 0 ms
目标边长: 0.0381475
Performing isotropic remeshing...
  Target edge length: 0.0381475
  Iterations: 3
  Protect boundary: Yes
等各向性重网格化 耗时: 0 ms
Making mesh manifold...
  Filling holes smaller than 10 edges...
流形化处理 耗时: 0 ms

处理后网格统计:
  顶点数: 2930
  面数: 5856
  边数: 8784
  平均边长: 0.0476844
  流形状态: 是

========================================
步骤 2: 变分切缝优化
========================================
切缝参数:
  长度正则化: 0.1
  平滑正则化: 0.05
  最大迭代次数: 30

Computing optimal cuts...
  Length regularization: 0.1
  Smooth regularization: 0.05
Converged at iteration 0
变分切缝计算 耗时: 0 ms

切缝结果:
  找到 0 条切缝
  总长度: 0
  平均失真: 0
  最大失真: 0
  可见性评分: 0

========================================
步骤 3: UV参数化 (BFF)
========================================
检测锥点...
Detecting cone vertices...
  Curvature threshold: 0.15
  Detected 8 cone vertices
  检测到 8 个锥点

Computing UV mapping...
  Using conformal mapping (BFF)
    Computing BFF parameterization...
BFFWrapper: Creating REAL implementation
BFFWrapper::setMesh: Initializing REAL BFF implementation
BFF Mesh initialized: 2930 vertices, 5856 faces
      Generating cut paths using Variational Surface Cutting algorithm...
RealAlgorithmIntegration::createIntegratedVariationalCutter: Returning null due to conflicts
      Warning: Variational Surface Cutting unavailable, using fallback method
SmartCutGenerator::generateCutsForClosedMesh: Attempting Variational Cuts integration...
[EulerianCutIntegrator] === Eulerian Cut Integration Started ===
[EulerianCutIntegrator] Step 1: Converting mesh to core format...
=== Geometry-Central to Core Conversion ===
  Input: 2930 vertices, 5856 faces, 8784 edges
  Creating HalfedgeMesh...
Constructed halfedge mesh with: 
    # verts =  2930
    # edges =  8784
    # faces =  5856
    # halfedges =  17568
    and 0 boundary components. 
Setting parent mesh pointers (debug mode)...
  Setting halfedges (total: 17568)...
    Processed 1000 halfedges...
    Processed 2000 halfedges...
    Processed 3000 halfedges...
    Processed 4000 halfedges...
    Processed 5000 halfedges...
    Processed 6000 halfedges...
    Processed 7000 halfedges...
    Processed 8000 halfedges...
    Processed 9000 halfedges...
    Processed 10000 halfedges...
    Processed 11000 halfedges...
    Processed 12000 halfedges...
    Processed 13000 halfedges...
    Processed 14000 halfedges...
    Processed 15000 halfedges...
    Processed 16000 halfedges...
    Processed 17000 halfedges...
  Finished setting 17568 halfedges.
  Setting imaginary halfedges...
  Setting vertices...
  Setting edges...
  Setting faces...
  Setting boundary loops...
  Parent mesh pointers set.
Creating geometry object...
Geometry object created, copying vertex positions...
Vertex positions copied.
Construction took 13.90 ms
Caching mesh information...
Caching complete.
  HalfedgeMesh created
  Computing statistics...
  Output: 2930 vertices, 5856 faces, 8784 edges
  Max position error: 0
  Max edge length error: 0
  Conversion SUCCESS!
[EulerianCutIntegrator]   Conversion successful
[EulerianCutIntegrator]   Position error: 0.000000
[EulerianCutIntegrator] Step 2: Creating Eulerian optimizer...
Length scale = 2.38946
[ENERGYPLOT]#TITLE:Energy during optimization
[ENERGYPLOT]#NAMES:Length,Distortion (Dirichlet),Distortion (Hencky),Area,Visibility,Normal Deviation
[ENERGYPLOT]#XLABEL:Iteration
[ENERGYPLOT]#YLABEL:Energy Contribution
Building operators...
  ..done building operators.
